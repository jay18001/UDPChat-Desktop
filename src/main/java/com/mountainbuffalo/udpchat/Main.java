package com.mountainbuffalo.udpchat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.IOException;
import java.net.InetAddress;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.InputMap;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

/**
 *
 * @author Justin
 */
public class Main extends javax.swing.JFrame implements MulticastReceiverDelegate {

    private final static Logger LOGGER = Logger.getLogger(Main.class.getName());

    private final MessageSerializer messageSerializer = new MessageSerializer();
    private MulticastReceiver connection;
    private String username = "Nobody";

    /**
     * Creates new form Test
     */
    public Main() {
        InputMap im = (InputMap) UIManager.get("Button.focusInputMap");
        im.put(KeyStroke.getKeyStroke("ENTER"), "pressed");
        im.put(KeyStroke.getKeyStroke("released ENTER"), "released");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messagesTextArea = new javax.swing.JTextArea();
        messageTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        usernameTextField = new javax.swing.JTextField();
        usernameLabel = new javax.swing.JLabel();
        connectButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        messagesTextArea.setEditable(false);
        messagesTextArea.setColumns(20);
        messagesTextArea.setRows(5);
        jScrollPane1.setViewportView(messagesTextArea);

        messageTextField.setEnabled(false);
        messageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageTextFieldActionPerformed(evt);
            }
        });

        sendButton.setText("Send");
        sendButton.setEnabled(false);
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        usernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameTextFieldActionPerformed(evt);
            }
        });

        usernameLabel.setText("Username");

        connectButton.setText("Connect");
        connectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(usernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usernameTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(connectButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel)
                    .addComponent(connectButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageTextFieldActionPerformed
        this.sendButton.doClick();
    }//GEN-LAST:event_messageTextFieldActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // Get the message text.
        final String text = this.messageTextField.getText().trim();

        // Check that the message is not empty.
        if (text.isEmpty()) {
            return;
        }

        // Create the new message instance.
        final Message message = new Message(MessageType.MESSAGE, username, text);

        // Send out the message.
        this.connection.sendMessage(message);

        // Clear out the message.
        this.messageTextField.setText("");
    }//GEN-LAST:event_sendButtonActionPerformed

    private void usernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextFieldActionPerformed
        this.connectButton.doClick();
    }//GEN-LAST:event_usernameTextFieldActionPerformed

    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed
        // Update the username.
        final String newUsername = usernameTextField.getText().trim();

        // Check New Username.
        if (newUsername.isEmpty()) {
            return;
        }

        // Assign new username.
        this.username = newUsername;

        // Manage Connections.
        if (connection == null) {
            connect();
        } else {
            disconnect();
        }
    }//GEN-LAST:event_connectButtonActionPerformed

    protected void connect() {
        // Log error if already connected.
        if (connection != null) {
            LOGGER.log(Level.WARNING, "Attempted to connect to chat when already connected!");
            return;
        }

        // Initialize connection.
        try {
            this.connection = new MulticastReceiver(Settings.GROUP_PORT, InetAddress.getByName(Settings.GROUP_ADDRESS), messageSerializer, this);
            this.connection.start();
        } catch (IOException ex) {
            LOGGER.log(Level.SEVERE, "Unable to establish chat connection!\n\t Cause: {0}", ex);
        }

        // Send Connection Message.
        Message message = new Message(MessageType.NEW_USER, username);
        connection.sendMessage(message);

        // Update GUI
        this.usernameTextField.setEnabled(false);
        this.connectButton.setText("Disconnect");
        this.messageTextField.setEnabled(true);
        this.sendButton.setEnabled(true);

        // Transfer Focus.
        this.messageTextField.requestFocus();
    }

    protected void disconnect() {
        // Log error if not connected.
        if (connection == null) {
            LOGGER.log(Level.WARNING, "Attempted to disconnect from connection that was not connected!");
            return;
        }
        
        // Send leave message.
        Message message = new Message(MessageType.USER_LEFT, username);
        this.connection.sendMessage(message);
        
        // Close the connection.
        this.connection.close();
        
        // Nullify connection.
        this.connection = null;

        // Update GUI
        this.usernameTextField.setEnabled(true);
        this.connectButton.setText("Connect");
        this.messageTextField.setEnabled(false);
        this.sendButton.setEnabled(false);

        // Transfer Focus.
        this.usernameTextField.requestFocus();
    }

    @Override
    public void didReciveMessage(Message message) {
        switch (message.getType()) {
            case NEW_USER:
                updateGUI(message.getUser() + " joined");
                break;
            case USER_LEFT:
                updateGUI(message.getUser() + " left");
                break;
            case MESSAGE:
                updateGUI(message.getUser() + ": " + message.getValue().orElse("<Message Missing>"));
                break;
        }
    }

    public void updateGUI(final String status) {
        if (!SwingUtilities.isEventDispatchThread()) {
            SwingUtilities.invokeLater(() -> this.updateGUI(status));
            return;
        }

        this.messagesTextArea.append(status + "\n");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messageTextField;
    private javax.swing.JTextArea messagesTextArea;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
